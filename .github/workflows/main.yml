name: main
on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

permissions:
  contents: read
  id-token: write
  packages: write

env:
  ASPNETCORE_ENVIRONMENT: Staging

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: setup
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: restore
      run: dotnet restore

    - name: build
      run: dotnet build --configuration Release --no-restore

  unit:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v3
    - name: setup
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'
      
    - name: test
      run: dotnet test -c Staging test/Unit /p:CollectCoverage=true /p:CoverletOutputFormat=opencover

    - name: coverage
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

  migrations:
    runs-on: ubuntu-latest
    needs: build

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          PostgresConnectionString: server=127.0.0.1;database=cloudhotel;username=postgres;password=postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v3
    - name: setup
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'
      
    - name: setup efcore
      run: dotnet tool install --global dotnet-ef
      
    - name: run migrations
      run: dotnet ef database update -p src/Infrastructure

  integration:
    runs-on: ubuntu-latest
    needs: migrations

    steps:
    - name: checkout
      uses: actions/checkout@v3

    - name: setup
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'
      
    - name: test
      run: dotnet test test/Integration

  push:
    runs-on: ubuntu-latest
    needs: [unit, integration]
    steps:
    - name: checkout
      uses: actions/checkout@v3

    - name: setup
      uses: docker/setup-buildx-action@v2

    - name: login
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: build and push
      uses: docker/build-push-action@v3
      with:
        tags: ghcr.io/nettdev/travel:${{ github.sha }}
        context: .
        push: true
        