name: main
on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

permissions:
  contents: read
  id-token: write
  packages: write

env:
  ASPNETCORE_ENVIRONMENT: Staging

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: setup
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: restore
      run: dotnet restore

    - name: build
      run: dotnet build --configuration Release --no-restore

  unit:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v3
    - name: setup
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'
      
    - name: test
      run: dotnet test -c Staging test/Unit /p:CollectCoverage=true /p:CoverletOutputFormat=opencover

    - name: coverage
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

  integration:
    runs-on: ubuntu-latest
    needs: build
    env:
      PostgresConnectionString: server=localhost;database=cloudhotel;username=postgres;password=postgres

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v3
    - name: setup
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'
      
    - name: setup efcore
      run: dotnet tool install --global dotnet-ef
      
    - name: run migrations
      run: dotnet ef database update -p src/Infrastructure
      
    - name: test
      run: dotnet test test/Integration
        